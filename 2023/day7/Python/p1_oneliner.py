((comp_hand := lambda hand1, hand2: hand1[2] - hand2[2] if hand1[2] != hand2[2] else (strengths := {'A': 12, 'K': 11, 'Q': 10, 'J': 9, 'T': 8, '9': 7, '8': 6, '7': 5, '6': 4, '5': 3, '4': 2, '3': 1, '2': 0})[c1] - strengths[c2] if any((c1:=a) != (c2:=b) for a, b in zip(hand1[0], hand2[0])) else 0), (hands := list((line[:5], int(line[6:]), int((s := ''.join(map(str, sorted(__import__('collections').Counter(line[:5]).values(), reverse=True)))) + ((5 - len(s)) * '0'))) for line in open('../input.txt', 'r').read().splitlines())), print(sum([i*hand[1] for i,hand in enumerate(sorted(hands, key=__import__('functools').cmp_to_key(comp_hand)), 1)])))
